// Do not edit this file; automatically generated by build.py.
'use strict';


Blockly.Java=new Blockly.Generator("Java");Blockly.Java.addReservedWords("abstract,assert,boolean,break,case,catch,class,const,continue,default,do,double,else,enum,extends,final,finally,float,for,goto,if,implements,import,instanceof,int,interface,long,native,new,package,private,protected,public,return,short,static,strictfp,super,switch,synchronized,this,throw,throws,transient,try,void,volatile,while,false,null,true,abs,divmod,input,open,staticmethod,all,enumerate,int,ord,str,any,eval,isinstance,pow,sum,basestring,execfile,issubclass,print,super,bin,file,iter,property,tuple,bool,filter,len,range,type,bytearray,float,list,raw_input,unichr,callable,format,locals,reduce,unicode,chr,frozenset,long,reload,vars,classmethod,getattr,map,repr,xrange,cmp,globals,max,reversed,zip,compile,hasattr,memoryview,round,__import__,complex,hash,min,set,apply,delattr,help,next,setattr,buffer,dict,hex,object,slice,coerce,dir,id,oct,sorted,intern,equal");
Blockly.Java.ORDER_ATOMIC=0;Blockly.Java.ORDER_COLLECTION=1;Blockly.Java.ORDER_STRING_CONVERSION=1;Blockly.Java.ORDER_MEMBER=2;Blockly.Java.ORDER_FUNCTION_CALL=2;Blockly.Java.ORDER_POSTFIX=3;Blockly.Java.ORDER_EXPONENTIATION=3;Blockly.Java.ORDER_LOGICAL_NOT=3;Blockly.Java.ORDER_UNARY_SIGN=4;Blockly.Java.ORDER_MULTIPLICATIVE=5;Blockly.Java.ORDER_ADDITIVE=6;Blockly.Java.ORDER_BITWISE_SHIFT=7;Blockly.Java.ORDER_RELATIONAL=8;Blockly.Java.ORDER_EQUALITY=9;Blockly.Java.ORDER_BITWISE_AND=10;
Blockly.Java.ORDER_BITWISE_XOR=11;Blockly.Java.ORDER_BITWISE_OR=12;Blockly.Java.ORDER_LOGICAL_AND=13;Blockly.Java.ORDER_LOGICAL_OR=14;Blockly.Java.ORDER_CONDITIONAL=15;Blockly.Java.ORDER_ASSIGNMENT=16;Blockly.Java.ORDER_NONE=99;Blockly.Java.PASS="  {}\n";Blockly.Java.POSTFIX="";Blockly.Java.INDENT="    ";Blockly.Java.EXTRAINDENT="";Blockly.Java.variableTypes_={};Blockly.Java.blocklyTypes_={};Blockly.Java.AppName_="myClass";Blockly.Java.Package_="demo";Blockly.Java.Baseclass_="";
Blockly.Java.needImports_=[];Blockly.Java.Interfaces_=[];Blockly.Java.ExtraImports_=null;Blockly.Java.INLINEVARCLASS=!1;Blockly.Java.classes_=[];Blockly.Java.globals_={};Blockly.Java.targetType_=null;Blockly.Java.fileHeader='/*\n * Copyright (c) 2015, <<Your Name>>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n';
Blockly.Java.setAppName=function(a){a&&""!==a||(a="MyClass");this.AppName_=a};Blockly.Java.getAppName=function(){return Blockly.Java.variableDB_.getName(this.AppName_,"CLASS")};Blockly.Java.setPackage=function(a){a&&""!==a||(a="demo");this.Package_=a};Blockly.Java.forceUpdate=function(a){if(a.getDescendants)a=a.getDescendants();else if(a.getAllBlocks)a=a.getAllBlocks();else throw"Not Block or Workspace: "+a;for(var b=0;b<a.length;b++)if(a[b].onchange)a[b].onchange()};Blockly.Java.getPackage=function(){return this.Package_};
Blockly.Java.setBaseclass=function(a){this.Baseclass_=a};Blockly.Java.getBaseclass=function(){var a=this.Baseclass_;""!=a&&(a=Blockly.Java.variableDB_.getName(a,"CLASS"));return a};Blockly.Java.addInterface=function(a){goog.array.contains(this.Interfaces_,a)||this.Interfaces_.push(a)};Blockly.Java.getInterfaces=function(){return 0===this.Interfaces_.length?null:this.Interfaces_};
Blockly.Java.setGlobalVar=function(a,b,c){null!=Blockly.Variables.getLocalContext(a,b)||"undefined"!==typeof this.globals_[b]&&null!==this.globals_[b]||(this.globals_[b]=c)};Blockly.Java.GetVariableType=function(a){a=this.variableTypes_[a];a||(a="Var",Blockly.Java.provideVarClass());return a};Blockly.Java.GetBlocklyType=function(a){return this.blocklyTypes_[a]};Blockly.Java.addImport=function(a){a="import "+a+";";this.imports_[a]=a};
Blockly.Java.getImports=function(){if(this.ExtraImports_)for(var a=0;a<this.ExtraImports_.length;a++)this.addImport(this.ExtraImports_[a]);a=goog.object.getValues(this.imports_);goog.array.sort(a);return a.join("\n")};Blockly.Java.setExtraImports=function(a){this.ExtraImports_=a};Blockly.Java.setVarClassInline=function(a){this.INLINEVARCLASS=a};Blockly.Java.getClasses=function(){var a="",b;for(b in this.classes_)a+=this.classes_[b];a&&(a+="\n\n");return a};
Blockly.Java.setExtraClass=function(a,b){this.classes_[a]=b.join("\n")+"\n"};Blockly.Java.workspaceToCode_=Blockly.Java.workspaceToCode;
Blockly.Java.workspaceToCode=function(a,b){this.setAppName(a.options.appTitle);this.forceUpdate(a);var c=this.workspaceToCode_(a,b),d=this.getImports()+"\n\npublic class "+this.getAppName(),e=this.getBaseclass();""!=e&&(d+=" extends "+e);if(e=this.getInterfaces())for(var f=" implements ",g=0;g<e.length;g++)d+=f+e[g],f=", ";return d+=" {\n\n"+this.INDENT+"public static void main(String[] args) { \n\n"+this.INDENT+this.INDENT+c+"\n } \n}\n\n"+this.getClasses()};
Blockly.Java.getValueType=function(a,b){var c=a.getInputTargetBlock(b);return c?c.outputConnection.check_:""};
Blockly.Java.provideVarClass=function(){this.INLINEVARCLASS&&(Blockly.Java.addImport("java.text.DecimalFormat"),Blockly.Java.addImport("java.text.NumberFormat"),Blockly.Java.addImport("java.lang.Math"),Blockly.Java.addImport("java.util.Arrays"),Blockly.Java.addImport("java.util.Collections"),Blockly.Java.addImport("java.util.LinkedList"),Blockly.Java.addImport("java.util.List"),Blockly.Java.addImport("java.util.HashMap"),Blockly.Java.addImport("java.util.Map"),Blockly.Java.addImport("java.util.Objects"))};
Blockly.Java.typeMapping={Object:"Object",Array:"LinkedList",Map:"HashMap",Var:"Var",Boolean:"Boolean",String:"String",Colour:"String",Number:"double"};Blockly.Java.subtypeMapping={Object:"Object",Array:"LinkedList",Map:"HashMap",Var:"Var",Boolean:"Boolean",String:"String",Colour:"String",Number:"Double"};
Blockly.Java.mapType=function(a){var b=function(a,c){c&&0!==c.length||(console.log("Empty type. Using Var"),c=["Var"]);var d=c.shift(),e=d;a[e]?e=a[e]:Blockly.Blocks[e]&&Blockly.Blocks[e].GBPClass?e=Blockly.Blocks[e].GBPClass:Blockly.VariableTypeEquivalence[e]||(console.log("Unknown type for "+d+" using Var for "+e),e="Var");"Var"===e&&Blockly.Java.provideVarClass();0<c.length&&(d=b(Blockly.Java.subtypeMapping,c),e+="<"+d+">");return e},c=null;a&&(c=a.split(":"));return b(this.typeMapping,c)};
Blockly.Java.setTargetType=function(a){var b=this.targetType_;this.targetType_=a;return b};Blockly.Java.getTargetType=function(a){return this.targetType_};Blockly.Java.computeJavaType=function(a){a=Blockly.Variables.Intersection(a,a);a=Blockly.Variables.resolveTypes(a);return Blockly.Java.mapType(a)};
Blockly.Java.init=function(a,b){this.definitions_=Object.create(null);this.functionNames_=Object.create(null);this.imports_=Object.create(null);this.classes_=Object.create(null);this.globals_=Object.create(null);for(var c=0;c<this.needImports_.length;c++)this.addImport(this.needImports_[c]);this.variableDB_?this.variableDB_.reset():this.variableDB_=new Blockly.Names(this.RESERVED_WORDS_);Blockly.Java.variableDB_.setVariableMap(a.getVariableMap());var d=[],e=Blockly.Variables.allDeveloperVariables(a);
for(c=0;c<e.length;c++)d.push(Blockly.Java.variableDB_.getName(e[c],Blockly.Names.DEVELOPER_VARIABLE_TYPE)+" = None");e=Blockly.Variables.allUsedVarModels(a);for(c=0;c<e.length;c++)d.push(Blockly.Java.variableDB_.getName(e[c].getId(),Blockly.Variables.NAME_TYPE)+" = None");Blockly.Java.definitions_.variables=d.join("\n");d=a.getAllVariables();for(c=0;c<d.length;c++)console.log(d[c].type);this.blocklyTypes_=a.getVariableTypes();console.log(this.blocklyTypes_);console.log(e);for(var f in this.blocklyTypes_)e.push(f);
for(c=0;c<e.length;c++)f=e[c],this.variableTypes_[f]=this.mapType(this.blocklyTypes_[f]);console.log(this.variableTypes_)};
Blockly.Java.finish=function(a){var b=[[],[]];for(f in this.definitions_)if("variables"!==f){var c=this.definitions_[f],d=1;if("function"!==typeof c){var e=c.split(" ",3);goog.array.contains(e,"static")&&(d=0)}b[d].push(f)}var f="";for(c in this.globals_){d="";e=this.GetVariableType(c);null!=this.globals_[c]&&""!==this.globals_[c]?d=" = "+this.globals_[c]:"Var"===e?d=" = new Var(0)":"Boolean"===e?d=" = false":"String"===e&&(d=' = ""');var g=Blockly.Java.variableDB_.getName(c,Blockly.Variables.NAME_TYPE);
f+="protected "+e+" "+g+d+";\n"}for(d=0;2>d;d++)for(e=b[d].sort(),g=0;g<e.length;g++){c=this.definitions_[e[g]];"function"===typeof c&&(c=c.call(this));var l="",k=c.split("(",2);if(2<=k.length&&-1===k[0].indexOf(";")){l="/**\n * Description goes here\n";var m=" *\n",h=k[0];h=h.split(" ");var n=h[h.length-2];h=k[1];h=h.split(")",1);h=h[0].trim();if(""!==h)for(k=h.split(","),h=0;h<k.length;h++){var p=k[h].split(" ");l+=m+" * @param "+p[p.length-1]+"\n";m=""}"void"!==n&&"public"!==n&&(l+=m+" * @return "+
n+"\n");l+=" */\n"}f+=l+c+"\n\n"}delete Blockly.Java.definitions_;delete Blockly.Java.functionNames_;Blockly.Java.variableDB_.reset();return f.replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+a};Blockly.Java.scrubNakedValue=function(a){return a+";\n"};Blockly.Java.quote_=function(a){return goog.string.quote(a)};
Blockly.Java.toStringCode=function(a,b){var c=a.getInputTargetBlock(b);if(!c)return"";var d=Blockly.Java.valueToCode(a,b,Blockly.Java.ORDER_NONE);d=d.trim();""!==d&&'"'!==d.charAt(0)&&("variables_get"===c.type&&"Var"===Blockly.Java.GetVariableType(c.procedurePrefix_+c.getFieldValue("VAR"))?d+=".toString()":Blockly.isNumber(d)?d='"'+d+'"':"variables_get"!==c.type&&"Var"===Blockly.Java.GetVariableType(d)?d+=".toString()":(this.addImport("java.text.DecimalFormat"),this.addImport("java.text.NumberFormat"),
d=this.provideFunction_("blocklyToString",["public static String blocklyToString(Object object) {","    String result;","    if (object instanceof String) {","        result = (String) object;","    } else {","        // must be a number","        // might be a double","        try {","            Double d = (double) object;","            // it was a double, so keep going",'            NumberFormat formatter = new DecimalFormat("#.#####");',"            result = formatter.format(d);","","        } catch (Exception ex) {",
"            // not a double, see if it is an integer","            try {","                Integer i = (int) object;","                // format should be number with a decimal point","                result = i.toString();","            } catch (Exception ex2) {","                // not a double or integer",'                result = "UNKNOWN";',"            }","        }","    }","","  return result;","}"])+"("+d+")"));return d};
Blockly.Java.scrub_=function(a,b,c){var d="";if(!a.outputConnection||!a.outputConnection.targetConnection){var e=a.getCommentText();e&&(d+=this.prefixLines(e,"// ")+"\n");for(var f=0;f<a.inputList.length;f++)a.inputList[f].type==Blockly.INPUT_VALUE&&(e=a.inputList[f].connection.targetBlock())&&(e=this.allNestedComments(e))&&(d+=this.prefixLines(e,"// "))}f=this.POSTFIX;this.POSTFIX="";e=this.EXTRAINDENT;this.EXTRAINDENT="";a=a.nextConnection&&a.nextConnection.targetBlock();c=this.blockToCode(a,c);
""!=e&&(c=this.prefixLines(c,e));return d+b+c+f};Blockly.Java.colour={};Blockly.Java.colour_picker=function(a){return['"'+a.getFieldValue("COLOUR")+'"',Blockly.Java.ORDER_ATOMIC]};Blockly.Java.colour_random=function(a){Blockly.Java.addImport("java.util.Random");return[Blockly.Java.provideFunction_("colour_random",["public static String "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"() {","  double num = Math.floor(Math.random() * Math.pow(2, 24));",'  return String.format("#%06x", (int)num);',"}"])+"()",Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.colour_rgb=function(a){var b=Blockly.Java.provideFunction_("colour_rgb",["public static String "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(double r, double g, double b) {","  r = Math.round(Math.max(Math.min(r, 100), 0) * 2.55);","  g = Math.round(Math.max(Math.min(g, 100), 0) * 2.55);","  b = Math.round(Math.max(Math.min(b, 100), 0) * 2.55);",'  return String.format("#%02x%02x%02x", (int)r, (int)g, (int)b);',"}"]),c=Blockly.Java.valueToCode(a,"RED",Blockly.Java.ORDER_NONE)||0,d=Blockly.Java.valueToCode(a,
"GREEN",Blockly.Java.ORDER_NONE)||0;a=Blockly.Java.valueToCode(a,"BLUE",Blockly.Java.ORDER_NONE)||0;return[b+"("+c+", "+d+", "+a+")",Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.colour_blend=function(a){var b=Blockly.Java.provideFunction_("colour_blend",["public static String "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(String c1, String c2, double ratio) {","  int r = 0;","  int g = 0;","  int b = 0;","  try {","    ratio = Math.max(Math.min(ratio, 1), 0);","    int r1 = Integer.parseInt(c1.substring(1, 3), 16);","    int g1 = Integer.parseInt(c1.substring(3, 5), 16);","    int b1 = Integer.parseInt(c1.substring(5, 7), 16);","    int r2 = Integer.parseInt(c2.substring(1, 3), 16);",
"    int g2 = Integer.parseInt(c2.substring(3, 5), 16);","    int b2 = Integer.parseInt(c2.substring(5, 7), 16);","    r = (int)Math.round(r1 * (1 - ratio) + r2 * ratio);","    g = (int)Math.round(g1 * (1 - ratio) + g2 * ratio);","    b = (int)Math.round(b1 * (1 - ratio) + b2 * ratio);","  } catch (Exception ex) {","  }",'  return String.format("#%02x%02x%02x", r, g, b);',"}"]),c=Blockly.Java.valueToCode(a,"COLOUR1",Blockly.Java.ORDER_NONE)||'"#000000"',d=Blockly.Java.valueToCode(a,"COLOUR2",Blockly.Java.ORDER_NONE)||
'"#000000"';a=Blockly.Java.valueToCode(a,"RATIO",Blockly.Java.ORDER_NONE)||0;return[b+"("+c+", "+d+", "+a+")",Blockly.Java.ORDER_FUNCTION_CALL]};Blockly.Java.lists={};Blockly.Java.lists_create_empty=function(a){return["[]",Blockly.Java.ORDER_ATOMIC]};Blockly.Java.lists_create_with=function(a){for(var b=Array(a.itemCount_),c=0;c<a.itemCount_;c++)b[c]=Blockly.Java.valueToCode(a,"ADD"+c,Blockly.Java.ORDER_NONE)||"None";return["["+b.join(", ")+"]",Blockly.Java.ORDER_ATOMIC]};
Blockly.Java.lists_repeat=function(a){var b=Blockly.Java.valueToCode(a,"ITEM",Blockly.Java.ORDER_NONE)||"None";a=Blockly.Java.valueToCode(a,"NUM",Blockly.Java.ORDER_MULTIPLICATIVE)||"0";return["["+b+"] * "+a,Blockly.Java.ORDER_MULTIPLICATIVE]};Blockly.Java.lists_length=function(a){return["len("+(Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_NONE)||"[]")+")",Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.lists_isEmpty=function(a){return["not len("+(Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_NONE)||"[]")+")",Blockly.Java.ORDER_LOGICAL_NOT]};
Blockly.Java.lists_indexOf=function(a){var b=Blockly.Java.valueToCode(a,"FIND",Blockly.Java.ORDER_NONE)||"[]",c=Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_NONE)||"''";if(a.workspace.options.oneBasedIndex)var d=" 0",e=" + 1",f="";else d=" -1",e="",f=" - 1";if("FIRST"==a.getFieldValue("END"))return a=Blockly.Java.provideFunction_("first_index",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):","  try: index = my_list.index(elem)"+e,"  except: index ="+d,"  return index"]),
[a+"("+c+", "+b+")",Blockly.Java.ORDER_FUNCTION_CALL];a=Blockly.Java.provideFunction_("last_index",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):","  try: index = len(my_list) - my_list[::-1].index(elem)"+f,"  except: index ="+d,"  return index"]);return[a+"("+c+", "+b+")",Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.lists_getIndex=function(a){var b=a.getFieldValue("MODE")||"GET",c=a.getFieldValue("WHERE")||"FROM_START",d=Blockly.Java.valueToCode(a,"VALUE","RANDOM"==c?Blockly.Java.ORDER_NONE:Blockly.Java.ORDER_MEMBER)||"[]";switch(c){case "FIRST":if("GET"==b)return[d+"[0]",Blockly.Java.ORDER_MEMBER];if("GET_REMOVE"==b)return[d+".pop(0)",Blockly.Java.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+".pop(0)\n";break;case "LAST":if("GET"==b)return[d+"[-1]",Blockly.Java.ORDER_MEMBER];if("GET_REMOVE"==b)return[d+
".pop()",Blockly.Java.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+".pop()\n";break;case "FROM_START":a=Blockly.Java.getAdjustedInt(a,"AT");if("GET"==b)return[d+"["+a+"]",Blockly.Java.ORDER_MEMBER];if("GET_REMOVE"==b)return[d+".pop("+a+")",Blockly.Java.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+".pop("+a+")\n";break;case "FROM_END":a=Blockly.Java.getAdjustedInt(a,"AT",1,!0);if("GET"==b)return[d+"["+a+"]",Blockly.Java.ORDER_MEMBER];if("GET_REMOVE"==b)return[d+".pop("+a+")",Blockly.Java.ORDER_FUNCTION_CALL];
if("REMOVE"==b)return d+".pop("+a+")\n";break;case "RANDOM":Blockly.Java.definitions_.import_random="import random";if("GET"==b)return["random.choice("+d+")",Blockly.Java.ORDER_FUNCTION_CALL];d=Blockly.Java.provideFunction_("lists_remove_random_item",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  x = int(random.random() * len(myList))","  return myList.pop(x)"])+"("+d+")";if("GET_REMOVE"==b)return[d,Blockly.Java.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+"\n"}throw Error("Unhandled combination (lists_getIndex).");
};
Blockly.Java.lists_setIndex=function(a){var b=Blockly.Java.valueToCode(a,"LIST",Blockly.Java.ORDER_MEMBER)||"[]",c=a.getFieldValue("MODE")||"GET",d=a.getFieldValue("WHERE")||"FROM_START",e=Blockly.Java.valueToCode(a,"TO",Blockly.Java.ORDER_NONE)||"None";switch(d){case "FIRST":if("SET"==c)return b+"[0] = "+e+"\n";if("INSERT"==c)return b+".insert(0, "+e+")\n";break;case "LAST":if("SET"==c)return b+"[-1] = "+e+"\n";if("INSERT"==c)return b+".append("+e+")\n";break;case "FROM_START":a=Blockly.Java.getAdjustedInt(a,"AT");
if("SET"==c)return b+"["+a+"] = "+e+"\n";if("INSERT"==c)return b+".insert("+a+", "+e+")\n";break;case "FROM_END":a=Blockly.Java.getAdjustedInt(a,"AT",1,!0);if("SET"==c)return b+"["+a+"] = "+e+"\n";if("INSERT"==c)return b+".insert("+a+", "+e+")\n";break;case "RANDOM":Blockly.Java.definitions_.import_random="import random";b.match(/^\w+$/)?a="":(a=Blockly.Java.variableDB_.getDistinctName("tmp_list",Blockly.Variables.NAME_TYPE),d=a+" = "+b+"\n",b=a,a=d);d=Blockly.Java.variableDB_.getDistinctName("tmp_x",
Blockly.Variables.NAME_TYPE);a+=d+" = int(random.random() * len("+b+"))\n";if("SET"==c)return a+(b+"["+d+"] = "+e+"\n");if("INSERT"==c)return a+(b+".insert("+d+", "+e+")\n")}throw Error("Unhandled combination (lists_setIndex).");};
Blockly.Java.lists_getSublist=function(a){var b=Blockly.Java.valueToCode(a,"LIST",Blockly.Java.ORDER_MEMBER)||"[]",c=a.getFieldValue("WHERE1"),d=a.getFieldValue("WHERE2");switch(c){case "FROM_START":c=Blockly.Java.getAdjustedInt(a,"AT1");"0"==c&&(c="");break;case "FROM_END":c=Blockly.Java.getAdjustedInt(a,"AT1",1,!0);break;case "FIRST":c="";break;default:throw Error("Unhandled option (lists_getSublist)");}switch(d){case "FROM_START":a=Blockly.Java.getAdjustedInt(a,"AT2",1);break;case "FROM_END":a=
Blockly.Java.getAdjustedInt(a,"AT2",0,!0);Blockly.isNumber(String(a))?"0"==a&&(a=""):(Blockly.Java.definitions_.import_sys="import sys",a+=" or sys.maxsize");break;case "LAST":a="";break;default:throw Error("Unhandled option (lists_getSublist)");}return[b+"["+c+" : "+a+"]",Blockly.Java.ORDER_MEMBER]};
Blockly.Java.lists_sort=function(a){var b=Blockly.Java.valueToCode(a,"LIST",Blockly.Java.ORDER_NONE)||"[]",c=a.getFieldValue("TYPE");a="1"===a.getFieldValue("DIRECTION")?"False":"True";return[Blockly.Java.provideFunction_("lists_sort",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(my_list, type, reverse):","  def try_float(s):","    try:","      return float(s)","    except:","      return 0","  key_funcs = {",'    "NUMERIC": try_float,','    "TEXT": str,','    "IGNORE_CASE": lambda s: str(s).lower()',
"  }","  key_func = key_funcs[type]","  list_cpy = list(my_list)","  return sorted(list_cpy, key=key_func, reverse=reverse)"])+"("+b+', "'+c+'", '+a+")",Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.lists_split=function(a){var b=a.getFieldValue("MODE");if("SPLIT"==b)b=Blockly.Java.valueToCode(a,"INPUT",Blockly.Java.ORDER_MEMBER)||"''",a=Blockly.Java.valueToCode(a,"DELIM",Blockly.Java.ORDER_NONE),a=b+".split("+a+")";else if("JOIN"==b)b=Blockly.Java.valueToCode(a,"INPUT",Blockly.Java.ORDER_NONE)||"[]",a=Blockly.Java.valueToCode(a,"DELIM",Blockly.Java.ORDER_MEMBER)||"''",a=a+".join("+b+")";else throw Error("Unknown mode: "+b);return[a,Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.lists_reverse=function(a){return["list(reversed("+(Blockly.Java.valueToCode(a,"LIST",Blockly.Java.ORDER_NONE)||"[]")+"))",Blockly.Java.ORDER_FUNCTION_CALL]};Blockly.Java.logic={};Blockly.Java.controls_if=function(a){var b=0,c="";do{var d=Blockly.Java.valueToCode(a,"IF"+b,Blockly.Java.ORDER_NONE)||"False";var e=Blockly.Java.statementToCode(a,"DO"+b)||Blockly.Java.PASS;c+=(0==b?"if ":"elif ")+d+":\n"+e;++b}while(a.getInput("IF"+b));a.getInput("ELSE")&&(e=Blockly.Java.statementToCode(a,"ELSE")||Blockly.Java.PASS,c+="else:\n"+e);return c};Blockly.Java.controls_ifelse=Blockly.Java.controls_if;
Blockly.Java.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c=Blockly.Java.ORDER_RELATIONAL,d=Blockly.Java.valueToCode(a,"A",c)||"0";a=Blockly.Java.valueToCode(a,"B",c)||"0";return[d+" "+b+" "+a,c]};
Blockly.Java.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"and":"or",c="and"==b?Blockly.Java.ORDER_LOGICAL_AND:Blockly.Java.ORDER_LOGICAL_OR,d=Blockly.Java.valueToCode(a,"A",c);a=Blockly.Java.valueToCode(a,"B",c);if(d||a){var e="and"==b?"True":"False";d||(d=e);a||(a=e)}else a=d="False";return[d+" "+b+" "+a,c]};Blockly.Java.logic_negate=function(a){return["not "+(Blockly.Java.valueToCode(a,"BOOL",Blockly.Java.ORDER_LOGICAL_NOT)||"True"),Blockly.Java.ORDER_LOGICAL_NOT]};
Blockly.Java.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"True":"False",Blockly.Java.ORDER_ATOMIC]};Blockly.Java.logic_null=function(a){return["None",Blockly.Java.ORDER_ATOMIC]};Blockly.Java.logic_ternary=function(a){var b=Blockly.Java.valueToCode(a,"IF",Blockly.Java.ORDER_CONDITIONAL)||"False",c=Blockly.Java.valueToCode(a,"THEN",Blockly.Java.ORDER_CONDITIONAL)||"None";a=Blockly.Java.valueToCode(a,"ELSE",Blockly.Java.ORDER_CONDITIONAL)||"None";return[c+" if "+b+" else "+a,Blockly.Java.ORDER_CONDITIONAL]};Blockly.Java.loops={};
Blockly.Java.controls_repeat_ext=function(a){var b=a.getField("TIMES")?String(Number(a.getFieldValue("TIMES"))):Blockly.Java.valueToCode(a,"TIMES",Blockly.Java.ORDER_ASSIGNMENT)||"0",c=Blockly.Java.statementToCode(a,"DO");c=Blockly.Java.addLoopTrap(c,a.id);a="";var d=Blockly.Java.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE);if(!b.match(/^\w+$/)&&!Blockly.isNumber(b)){var e=Blockly.Java.variableDB_.getDistinctName("repeat_end",Blockly.Variables.NAME_TYPE);a+="int "+e+" = int("+
b+");\n"}return a+("for (int "+d+" = 0; "+d+" < "+b+"; "+d+"++) {\n"+c+"} \n")};Blockly.Java.controls_repeat=Blockly.Java.controls_repeat_ext;Blockly.Java.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.Java.valueToCode(a,"BOOL",b?Blockly.Java.ORDER_LOGICAL_NOT:Blockly.Java.ORDER_NONE)||"False",d=Blockly.Java.statementToCode(a,"DO");d=Blockly.Java.addLoopTrap(d,a.id)||Blockly.Java.PASS;b&&(c="not "+c);return"while "+c+":\n"+d};
Blockly.Java.controls_for=function(a){var b=Blockly.Java.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Java.valueToCode(a,"FROM",Blockly.Java.ORDER_NONE)||"0",d=Blockly.Java.valueToCode(a,"TO",Blockly.Java.ORDER_NONE)||"0",e=Blockly.Java.valueToCode(a,"BY",Blockly.Java.ORDER_NONE)||"1",f=Blockly.Java.statementToCode(a,"DO");f=Blockly.Java.addLoopTrap(f,a.id)||Blockly.Java.PASS;var g="",l=function(){return Blockly.Java.provideFunction_("upRange",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+
"(start, stop, step):","  while start <= stop:","    yield start","    start += abs(step)"])},k=function(){return Blockly.Java.provideFunction_("downRange",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start >= stop:","    yield start","    start -= abs(step)"])};a=function(a,b,c){return"("+a+" <= "+b+") and "+l()+"("+a+", "+b+", "+c+") or "+k()+"("+a+", "+b+", "+c+")"};if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&Blockly.isNumber(e))c=parseFloat(c),d=parseFloat(d),
e=Math.abs(parseFloat(e)),0===c%1&&0===d%1&&0===e%1?(c<=d?(d++,a=0==c&&1==e?d:c+", "+d,1!=e&&(a+=", "+e)):(d--,a=c+", "+d+", -"+e),a="range("+a+")"):(a=c<d?l():k(),a+="("+c+", "+d+", "+e+")");else{var m=function(a,c){if(Blockly.isNumber(a))a=parseFloat(a);else if(a.match(/^\w+$/))a="float("+a+")";else{var d=Blockly.Java.variableDB_.getDistinctName(b+c,Blockly.Variables.NAME_TYPE);g+=d+" = float("+a+")\n";a=d}return a};c=m(c,"_start");d=m(d,"_end");m(e,"_inc");a="number"==typeof c&&"number"==typeof d?
c<d?l(c,d,e):k(c,d,e):a(c,d,e)}return g+="for "+b+" in "+a+":\n"+f};Blockly.Java.controls_forEach=function(a){var b=Blockly.Java.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Java.valueToCode(a,"LIST",Blockly.Java.ORDER_RELATIONAL)||"[]",d=Blockly.Java.statementToCode(a,"DO");d=Blockly.Java.addLoopTrap(d,a.id)||Blockly.Java.PASS;return"for "+b+" in "+c+":\n"+d};
Blockly.Java.controls_flow_statements=function(a){switch(a.getFieldValue("FLOW")){case "BREAK":return"break\n";case "CONTINUE":return"continue\n"}throw Error("Unknown flow statement.");};Blockly.Java.math={};Blockly.Java.addReservedWords("math,random,Number");Blockly.Java.math_number=function(a){a=""+parseFloat(a.getFieldValue("NUM"));"Double"===Blockly.Java.getTargetType()&&0>a.indexOf(".")&&(a+=".0");return[a,0>a?Blockly.Java.ORDER_UNARY_SIGN:Blockly.Java.ORDER_ATOMIC]};
Blockly.Java.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.Java.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Java.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Java.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Java.ORDER_MULTIPLICATIVE],POWER:[" ** ",Blockly.Java.ORDER_EXPONENTIATION]}[a.getFieldValue("OP")],c=b[0];b=b[1];var d=Blockly.Java.valueToCode(a,"A",b)||"0";a=Blockly.Java.valueToCode(a,"B",b)||"0";" ** "===c?(Blockly.Java.addImport("java.lang.Math"),c="Math.pow("+d+", "+a+")"):c=d+c+a;return[c,
b]};
Blockly.Java.math_single=function(a){var b=a.getFieldValue("OP");if("NEG"==b){var c=Blockly.Java.valueToCode(a,"NUM",Blockly.Java.ORDER_UNARY_SIGN)||"0";return["-"+c,Blockly.Java.ORDER_UNARY_SIGN]}Blockly.Java.definitions_.import_math="import math";a="SIN"==b||"COS"==b||"TAN"==b?Blockly.Java.valueToCode(a,"NUM",Blockly.Java.ORDER_MULTIPLICATIVE)||"0":Blockly.Java.valueToCode(a,"NUM",Blockly.Java.ORDER_NONE)||"0";switch(b){case "ABS":c="math.fabs("+a+")";break;case "ROOT":c="math.sqrt("+a+")";break;
case "LN":c="math.log("+a+")";break;case "LOG10":c="math.log10("+a+")";break;case "EXP":c="math.exp("+a+")";break;case "POW10":c="math.pow(10,"+a+")";break;case "ROUND":c="round("+a+")";break;case "ROUNDUP":c="math.ceil("+a+")";break;case "ROUNDDOWN":c="math.floor("+a+")";break;case "SIN":c="math.sin("+a+" / 180.0 * math.pi)";break;case "COS":c="math.cos("+a+" / 180.0 * math.pi)";break;case "TAN":c="math.tan("+a+" / 180.0 * math.pi)"}if(c)return[c,Blockly.Java.ORDER_FUNCTION_CALL];switch(b){case "ASIN":c=
"math.asin("+a+") / math.pi * 180";break;case "ACOS":c="math.acos("+a+") / math.pi * 180";break;case "ATAN":c="math.atan("+a+") / math.pi * 180";break;default:throw Error("Unknown math operator: "+b);}return[c,Blockly.Java.ORDER_MULTIPLICATIVE]};
Blockly.Java.math_constant=function(a){var b={PI:["Math.PI",Blockly.Java.ORDER_MEMBER],E:["Math.E",Blockly.Java.ORDER_MEMBER],GOLDEN_RATIO:["(1 + Math.sqrt(5)) / 2",Blockly.Java.ORDER_MULTIPLICATIVE],SQRT2:["Math.sqrt(2)",Blockly.Java.ORDER_MEMBER],SQRT1_2:["Math.sqrt(1.0 / 2)",Blockly.Java.ORDER_MEMBER],INFINITY:["Double.POSITIVE_INFINITY",Blockly.Java.ORDER_ATOMIC]};a=a.getFieldValue("CONSTANT");"INFINITY"!=a&&Blockly.Java.addImport("java.lang.Math");return b[a]};
Blockly.Java.math_number_property=function(a){var b=Blockly.Java.valueToCode(a,"NUMBER_TO_CHECK",Blockly.Java.ORDER_MULTIPLICATIVE)||"0",c=a.getFieldValue("PROPERTY");if("PRIME"==c)return Blockly.Java.definitions_.import_math="import math",Blockly.Java.definitions_.from_numbers_import_Number="from numbers import Number",[Blockly.Java.provideFunction_("math_isPrime",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(n):","  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods","  # If n is not a number but a string, try parsing it.",
"  if not isinstance(n, Number):","    try:","      n = float(n)","    except:","      return False","  if n == 2 or n == 3:","    return True","  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.","  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:","    return False","  # Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x in range(6, int(math.sqrt(n)) + 2, 6):","    if n % (x - 1) == 0 or n % (x + 1) == 0:","      return False","  return True"])+"("+
b+")",Blockly.Java.ORDER_FUNCTION_CALL];switch(c){case "EVEN":var d=b+" % 2 == 0";break;case "ODD":d=b+" % 2 == 1";break;case "WHOLE":d=b+" % 1 == 0";break;case "POSITIVE":d=b+" > 0";break;case "NEGATIVE":d=b+" < 0";break;case "DIVISIBLE_BY":a=Blockly.Java.valueToCode(a,"DIVISOR",Blockly.Java.ORDER_MULTIPLICATIVE);if(!a||"0"==a)return["False",Blockly.Java.ORDER_ATOMIC];d=b+" % "+a+" == 0"}return[d,Blockly.Java.ORDER_RELATIONAL]};
Blockly.Java.math_change=function(a){var b=Blockly.Java.valueToCode(a,"DELTA",Blockly.Java.ORDER_ADDITIVE)||"0";a=Blockly.Java.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);return a+" = "+a+" + "+b+";\n"};Blockly.Java.math_round=Blockly.Java.math_single;Blockly.Java.math_trig=Blockly.Java.math_single;
Blockly.Java.math_on_list=function(a){var b=a.getFieldValue("OP");a=Blockly.Java.valueToCode(a,"LIST",Blockly.Java.ORDER_NONE)||"[]";switch(b){case "SUM":b="sum("+a+")";break;case "MIN":b="min("+a+")";break;case "MAX":b="max("+a+")";break;case "AVERAGE":Blockly.Java.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.Java.provideFunction_("math_mean",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = [e for e in myList if isinstance(e, Number)]",
"  if not localList: return","  return float(sum(localList)) / len(localList)"]);b=b+"("+a+")";break;case "MEDIAN":Blockly.Java.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.Java.provideFunction_("math_median",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = sorted([e for e in myList if isinstance(e, Number)])","  if not localList: return","  if len(localList) % 2 == 0:","    return (localList[len(localList) // 2 - 1] + localList[len(localList) // 2]) / 2.0",
"  else:","    return localList[(len(localList) - 1) // 2]"]);b=b+"("+a+")";break;case "MODE":b=Blockly.Java.provideFunction_("math_modes",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(some_list):","  modes = []","  # Using a lists of [item, count] to keep count rather than dict",'  # to avoid "unhashable" errors when the counted item is itself a list or dict.',"  counts = []","  maxCount = 1","  for item in some_list:","    found = False","    for count in counts:","      if count[0] == item:",
"        count[1] += 1","        maxCount = max(maxCount, count[1])","        found = True","    if not found:","      counts.append([item, 1])","  for counted_item, item_count in counts:","    if item_count == maxCount:","      modes.append(counted_item)","  return modes"]);b=b+"("+a+")";break;case "STD_DEV":Blockly.Java.definitions_.import_math="import math";b=Blockly.Java.provideFunction_("math_standard_deviation",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(numbers):","  n = len(numbers)",
"  if n == 0: return","  mean = float(sum(numbers)) / n","  variance = sum((x - mean) ** 2 for x in numbers) / n","  return math.sqrt(variance)"]);b=b+"("+a+")";break;case "RANDOM":Blockly.Java.definitions_.import_random="import random";b="random.choice("+a+")";break;default:throw Error("Unknown operator: "+b);}return[b,Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.math_modulo=function(a){var b=Blockly.Java.valueToCode(a,"DIVIDEND",Blockly.Java.ORDER_MULTIPLICATIVE)||"0";a=Blockly.Java.valueToCode(a,"DIVISOR",Blockly.Java.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+a,Blockly.Java.ORDER_MULTIPLICATIVE]};
Blockly.Java.math_constrain=function(a){var b=Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_NONE)||"0",c=Blockly.Java.valueToCode(a,"LOW",Blockly.Java.ORDER_NONE)||"0";a=Blockly.Java.valueToCode(a,"HIGH",Blockly.Java.ORDER_NONE)||"float('inf')";return["min(max("+b+", "+c+"), "+a+")",Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.math_random_int=function(a){Blockly.Java.definitions_.import_random="import random";var b=Blockly.Java.valueToCode(a,"FROM",Blockly.Java.ORDER_NONE)||"0";a=Blockly.Java.valueToCode(a,"TO",Blockly.Java.ORDER_NONE)||"0";return["random.randint("+b+", "+a+")",Blockly.Java.ORDER_FUNCTION_CALL]};Blockly.Java.math_random_float=function(a){Blockly.Java.definitions_.import_random="import random";return["random.random()",Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.math_atan2=function(a){Blockly.Java.definitions_.import_math="import math";var b=Blockly.Java.valueToCode(a,"X",Blockly.Java.ORDER_NONE)||"0";return["math.atan2("+(Blockly.Java.valueToCode(a,"Y",Blockly.Java.ORDER_NONE)||"0")+", "+b+") / math.pi * 180",Blockly.Java.ORDER_MULTIPLICATIVE]};Blockly.Java.procedures={};
Blockly.Java.procedures_defreturn=function(a){for(var b=[],c,d=a.workspace,e=Blockly.Variables.allUsedVarModels(d)||[],f=0;c=e[f];f++)c=c.name,-1==a.arguments_.indexOf(c)&&b.push(Blockly.Java.variableDB_.getName(c,Blockly.Variables.NAME_TYPE));d=Blockly.Variables.allDeveloperVariables(d);for(f=0;f<d.length;f++)b.push(Blockly.Java.variableDB_.getName(d[f],Blockly.Names.DEVELOPER_VARIABLE_TYPE));b=b.length?Blockly.Java.INDENT+"global "+b.join(", ")+"\n":"";d=Blockly.Java.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE);
e=Blockly.Java.statementToCode(a,"STACK");Blockly.Java.STATEMENT_PREFIX&&(f=a.id.replace(/\$/g,"$$$$"),e=Blockly.Java.prefixLines(Blockly.Java.STATEMENT_PREFIX.replace(/%1/g,"'"+f+"'"),Blockly.Java.INDENT)+e);Blockly.Java.INFINITE_LOOP_TRAP&&(e=Blockly.Java.INFINITE_LOOP_TRAP.replace(/%1/g,'"'+a.id+'"')+e);(c=Blockly.Java.valueToCode(a,"RETURN",Blockly.Java.ORDER_NONE)||"")?c=Blockly.Java.INDENT+"return "+c+"\n":e||(e=Blockly.Java.PASS);var g=[];for(f=0;f<a.arguments_.length;f++)g[f]=Blockly.Java.variableDB_.getName(a.arguments_[f],
Blockly.Variables.NAME_TYPE);b="def "+d+"("+g.join(", ")+"):\n"+b+e+c;b=Blockly.Java.scrub_(a,b);Blockly.Java.definitions_["%"+d]=b;return null};Blockly.Java.procedures_defnoreturn=Blockly.Java.procedures_defreturn;Blockly.Java.procedures_callreturn=function(a){for(var b=Blockly.Java.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Java.valueToCode(a,"ARG"+d,Blockly.Java.ORDER_NONE)||"None";return[b+"("+c.join(", ")+")",Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.procedures_callnoreturn=function(a){for(var b=Blockly.Java.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Java.valueToCode(a,"ARG"+d,Blockly.Java.ORDER_NONE)||"None";return b+"("+c.join(", ")+")\n"};
Blockly.Java.procedures_ifreturn=function(a){var b="if "+(Blockly.Java.valueToCode(a,"CONDITION",Blockly.Java.ORDER_NONE)||"False")+":\n";a.hasReturnValue_?(a=Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_NONE)||"None",b+=Blockly.Java.INDENT+"return "+a+"\n"):b+=Blockly.Java.INDENT+"return\n";return b};Blockly.Java.texts={};Blockly.Java.text=function(a){return[Blockly.Java.quote_(a.getFieldValue("TEXT")),Blockly.Java.ORDER_ATOMIC]};Blockly.Java.text.forceString_=function(a){return Blockly.Java.text.forceString_.strRegExp.test(a)?a:"str("+a+")"};Blockly.Java.text.forceString_.strRegExp=/^\s*'([^']|\\')*'\s*$/;
Blockly.Java.text_join=function(a){switch(a.itemCount_){case 0:return["''",Blockly.Java.ORDER_ATOMIC];case 1:return a=Blockly.Java.valueToCode(a,"ADD0",Blockly.Java.ORDER_NONE)||"''",a=Blockly.Java.text.forceString_(a),[a,Blockly.Java.ORDER_FUNCTION_CALL];case 2:var b=Blockly.Java.valueToCode(a,"ADD0",Blockly.Java.ORDER_NONE)||"''";a=Blockly.Java.valueToCode(a,"ADD1",Blockly.Java.ORDER_NONE)||"''";a=Blockly.Java.text.forceString_(b)+" + "+Blockly.Java.text.forceString_(a);return[a,Blockly.Java.ORDER_ADDITIVE];
default:b=[];for(var c=0;c<a.itemCount_;c++)b[c]=Blockly.Java.valueToCode(a,"ADD"+c,Blockly.Java.ORDER_NONE)||"''";a=Blockly.Java.variableDB_.getDistinctName("x",Blockly.Variables.NAME_TYPE);a="''.join([str("+a+") for "+a+" in ["+b.join(", ")+"]])";return[a,Blockly.Java.ORDER_FUNCTION_CALL]}};
Blockly.Java.text_append=function(a){var b=Blockly.Java.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=Blockly.Java.valueToCode(a,"TEXT",Blockly.Java.ORDER_NONE)||"''";return b+" = str("+b+") + "+Blockly.Java.text.forceString_(a)+"\n"};Blockly.Java.text_length=function(a){return["len("+(Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_NONE)||"''")+")",Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.text_isEmpty=function(a){return["not len("+(Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_NONE)||"''")+")",Blockly.Java.ORDER_LOGICAL_NOT]};Blockly.Java.text_indexOf=function(a){var b="FIRST"==a.getFieldValue("END")?"find":"rfind",c=Blockly.Java.valueToCode(a,"FIND",Blockly.Java.ORDER_NONE)||"''";b=(Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_MEMBER)||"''")+"."+b+"("+c+")";return a.workspace.options.oneBasedIndex?[b+" + 1",Blockly.Java.ORDER_ADDITIVE]:[b,Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.text_charAt=function(a){var b=a.getFieldValue("WHERE")||"FROM_START",c=Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_MEMBER)||"''";switch(b){case "FIRST":return[c+"[0]",Blockly.Java.ORDER_MEMBER];case "LAST":return[c+"[-1]",Blockly.Java.ORDER_MEMBER];case "FROM_START":return a=Blockly.Java.getAdjustedInt(a,"AT"),[c+"["+a+"]",Blockly.Java.ORDER_MEMBER];case "FROM_END":return a=Blockly.Java.getAdjustedInt(a,"AT",1,!0),[c+"["+a+"]",Blockly.Java.ORDER_MEMBER];case "RANDOM":return Blockly.Java.definitions_.import_random=
"import random",[Blockly.Java.provideFunction_("text_random_letter",["def "+Blockly.Java.FUNCTION_NAME_PLACEHOLDER_+"(text):","  x = int(random.random() * len(text))","  return text[x];"])+"("+c+")",Blockly.Java.ORDER_FUNCTION_CALL]}throw Error("Unhandled option (text_charAt).");};
Blockly.Java.text_getSubstring=function(a){var b=a.getFieldValue("WHERE1"),c=a.getFieldValue("WHERE2"),d=Blockly.Java.valueToCode(a,"STRING",Blockly.Java.ORDER_MEMBER)||"''";switch(b){case "FROM_START":b=Blockly.Java.getAdjustedInt(a,"AT1");"0"==b&&(b="");break;case "FROM_END":b=Blockly.Java.getAdjustedInt(a,"AT1",1,!0);break;case "FIRST":b="";break;default:throw Error("Unhandled option (text_getSubstring)");}switch(c){case "FROM_START":a=Blockly.Java.getAdjustedInt(a,"AT2",1);break;case "FROM_END":a=
Blockly.Java.getAdjustedInt(a,"AT2",0,!0);Blockly.isNumber(String(a))?"0"==a&&(a=""):(Blockly.Java.definitions_.import_sys="import sys",a+=" or sys.maxsize");break;case "LAST":a="";break;default:throw Error("Unhandled option (text_getSubstring)");}return[d+"["+b+" : "+a+"]",Blockly.Java.ORDER_MEMBER]};
Blockly.Java.text_changeCase=function(a){var b={UPPERCASE:".upper()",LOWERCASE:".lower()",TITLECASE:".title()"}[a.getFieldValue("CASE")];return[(Blockly.Java.valueToCode(a,"TEXT",Blockly.Java.ORDER_MEMBER)||"''")+b,Blockly.Java.ORDER_FUNCTION_CALL]};Blockly.Java.text_trim=function(a){var b={LEFT:".lstrip()",RIGHT:".rstrip()",BOTH:".strip()"}[a.getFieldValue("MODE")];return[(Blockly.Java.valueToCode(a,"TEXT",Blockly.Java.ORDER_MEMBER)||"''")+b,Blockly.Java.ORDER_FUNCTION_CALL]};
Blockly.Java.text_print=function(a){return"System.out.println("+(Blockly.Java.valueToCode(a,"TEXT",Blockly.Java.ORDER_NONE)||'""')+";\n"};Blockly.Java.text_prompt_ext=function(a){var b="window.prompt("+(a.getField("TEXT")?Blockly.Java.quote_(a.getFieldValue("TEXT")):Blockly.Java.valueToCode(a,"TEXT",Blockly.Java.ORDER_NONE)||"''")+");";"NUMBER"==a.getFieldValue("TYPE")&&(b="parseFloat("+b+")");return[b,Blockly.Java.ORDER_FUNCTION_CALL]};Blockly.Java.text_prompt=Blockly.Java.text_prompt_ext;
Blockly.Java.text_count=function(a){var b=Blockly.Java.valueToCode(a,"TEXT",Blockly.Java.ORDER_MEMBER)||"''";a=Blockly.Java.valueToCode(a,"SUB",Blockly.Java.ORDER_NONE)||"''";return[b+".count("+a+")",Blockly.Java.ORDER_MEMBER]};
Blockly.Java.text_replace=function(a){var b=Blockly.Java.valueToCode(a,"TEXT",Blockly.Java.ORDER_MEMBER)||"''",c=Blockly.Java.valueToCode(a,"FROM",Blockly.Java.ORDER_NONE)||"''";a=Blockly.Java.valueToCode(a,"TO",Blockly.Java.ORDER_NONE)||"''";return[b+".replace("+c+", "+a+")",Blockly.Java.ORDER_MEMBER]};Blockly.Java.text_reverse=function(a){return[(Blockly.Java.valueToCode(a,"TEXT",Blockly.Java.ORDER_MEMBER)||"''")+"[::-1]",Blockly.Java.ORDER_MEMBER]};Blockly.Java.variables={};Blockly.Java.variables_get=function(a){return[Blockly.Java.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Java.ORDER_ATOMIC]};
Blockly.Java.variables_set=function(a){var b=Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_NONE)||"0",c=Blockly.Java.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),d=Blockly.Java.getValueType(a,"VALUE"),e=Blockly.Java.typeMapping[d],f=!1;d&&goog.array.contains(d,e)&&(f=!0);"String"!==e||f||(b=Blockly.Java.toStringCode(a,"VALUE"));return e+" "+c+(" = "+b+";\n")};
Blockly.Java.initialize_variable=function(a){var b=Blockly.Java.valueToCode(a,"VALUE",Blockly.Java.ORDER_NONE)||"0";if(""!=a.procedurePrefix_){var c=Blockly.Java.GetVariableType(a.procedurePrefix_+a.getFieldValue("VAR"));"LinkedList"===c&&Blockly.Java.addImport("java.util.LinkedList");a=Blockly.Java.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);return c+" "+a+" = "+b+";\n"}Blockly.Java.setGlobalVar(a,a.getFieldValue("VAR"),b);return""};
Blockly.Java.variablesDynamic={};Blockly.Java.variables_get_dynamic=Blockly.Java.variables_get;Blockly.Java.variables_set_dynamic=Blockly.Java.variables_set;